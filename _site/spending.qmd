---
title: Uitgaven
description-meta: "Hoe jagen politieke partijen op jouw stem, wat willen ze juist niet dat je ziet en hoeveel geld geven ze daaraan uit? In aanloop naar de Tweede Kamerverkiezingen monitoren we politieke microtargeting."
lang: nl
---

```{r setup, include=FALSE}

sets <- jsonlite::fromJSON("../settings.json")

## Global options
knitr::opts_chunk$set(
    cache = F,
    echo = F,
    warning = F,
    message = F,
    cache.lazy = FALSE
)


pacman::p_load(htmltools, tidyverse, highcharter, gt, gtExtras)

options(scipen = 999)
# print(getwd())
# here::here("")
# prCint(getwd())
hcoptslang <- getOption("highcharter.lang")

hcoptslang$shortMonths <- c("Jan", "Feb", "Mrt", "Apr", "Mei", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec")

options(highcharter.lang = hcoptslang)


source("../utils.R")
source("../party_utils.R")


total_spend_id <- election_dat30 %>%
    filter(main_currency == the_currency) %>%
  distinct(internal_id, .keep_all = T) %>%
  group_by(party) %>%
  summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
  ungroup()
```



```{r}
sum30 <- election_dat30 %>%
    filter(main_currency == the_currency) %>%
    distinct(internal_id, .keep_all = T) %>%
    summarize(total_spend_formatted = sum(total_spend_formatted),
              total_num_ads = sum(total_num_ads))

sum7 <- election_dat7 %>%
    filter(main_currency == the_currency) %>%
    distinct(internal_id, .keep_all = T) %>%
    summarize(total_spend_formatted = sum(total_spend_formatted),
              total_num_ads = sum(total_num_ads))

add_ribbons <- function(x, adv, col) {
   x %>%
  # tab_options(table.width = pct(100)) %>%
  tab_style(
    style = cell_borders(
      sides = c("left"),
      color = col,
      weight = px(18.5),
      style = "solid"
    ),
    locations = cells_body(
      columns = `Number of Advertisers`,
      rows = adv
    ))
}

add_ribbons2 <- function(x, adv, col) {
   x %>%
  # tab_options(table.width = pct(100)) %>%
  tab_style(
    style = cell_borders(
      sides = c("left"),
      color = col,
      weight = px(18.5),
      style = "solid"
    ),
    locations = cells_body(
      columns = `Number of Ads`,
      rows = adv
    ))
}


add_ribbons3 <- function(x, adv, col) {
   x %>%
  # tab_options(table.width = pct(100)) %>%
  tab_style(
    style = cell_borders(
      sides = c("left"),
      color = col,
      weight = px(18.5),
      style = "solid"
    ),
    locations = cells_body(
      columns = `Total Spend`,
      rows = adv
    ))
}
```

Hier zie je de *volledige* en *dagelijkse* uitgaven van politieke partijen in de aanloop naar de Tweede Kamerverkiezingen volgens de nieuwste data.



::: {.panel-tabset}


## <img src="img/meta.svg" height="24px"> Meta


::: {.panel-tabset}

### `r last30days_string`

In totaal gaven politieke partijen gedurende deze periode `r paste0(currency_symbol, scales::comma_format()(sum30$total_spend_formatted))` euro uit en toonden ze `r sum30$total_num_ads` advertenties op Meta.




```{r}

# paste('<a href="',myurl,'">',mytext,'</a>')

get_table_dat <- function(x, var) {

  x %>%
    filter(main_currency == the_currency) %>%
    distinct(internal_id, .keep_all = T) %>%
    group_by({
      {
        var
      }
    }) %>%
    summarize(total_num_ads = n()) %>%
    drop_na() %>%
    mutate(total_num_ads = scales::comma(total_num_ads)) %>%
    pivot_wider(names_from = {
      {
        var
      }
    }, values_from = total_num_ads) %>%
    mutate(`party_col` = "Number of Advertisers") %>%
    bind_rows(
      x %>%
        filter(main_currency == the_currency) %>%
        distinct(internal_id, .keep_all = T) %>%
        group_by({
          {
            var
          }
        }) %>%
        arrange(desc(total_spend_formatted)) %>%
        slice(1:3) %>%
        mutate(total_spend_formatted = scales::comma(total_spend_formatted)) %>%
        mutate(n_words = str_count(page_name, " ")) %>%
        mutate(
          lab =  glue::glue('[||ppage_namep||](https://www.facebook.com/ads/library/?ad_type=political_and_issue_ads&country=NL&view_all_page_id=||pinternal_idp||) (||pcurrency_symbolp||||ptotal_spend_formattedp||)', .open = "||p", .close = "p||")
          ) %>%
        select({
          {
            var
          }
        }, lab) %>%
        drop_na() %>%
        summarize(lab = paste0("<br>", 1:n(), ". ", lab, collapse = "")) %>%
        mutate(lab = paste0(lab, "<br><br>")) %>%
        pivot_wider(names_from = {
          {
            var
          }
        }, values_from = lab) %>%
        mutate(`party_col` = "Top Spenders")
    )  %>%
    bind_rows(
      x %>%
        distinct(internal_id, .keep_all = T) %>%
        group_by({
          {
            var
          }
        }) %>%
        summarize(total_num_ads = sum(total_num_ads)) %>%
        drop_na() %>%
        mutate(total_num_ads = scales::comma(total_num_ads)) %>%
        pivot_wider(names_from = {
          {
            var
          }
        }, values_from = total_num_ads) %>%
        mutate(`party_col` = "Number of Ads")
    ) %>%
    bind_rows(
      x %>%
        distinct(internal_id, .keep_all = T) %>%
        group_by({
          {
            var
          }
        }) %>%
        summarize(total_spend_formatted = sum(total_spend_formatted)) %>%
        mutate(total_spend_formatted = scales::comma(total_spend_formatted)) %>%
        mutate(
          total_spend_formatted = paste0(currency_symbol, total_spend_formatted)
        ) %>%
        drop_na() %>%
        pivot_wider(names_from = {
          {
            var
          }
        }, values_from = total_spend_formatted) %>%
        mutate(`party_col` = "Total Spend")
    ) %>%
    t() %>%
    as.data.frame() %>%
    rownames_to_column("party_col") %>%
    set_names(.[nrow(.), ] %>% as.character()) %>%
    slice(1:(n() - 1))

}

the_table30 <- get_table_dat(election_dat30, party) %>%
  arrange(desc(parse_number(`Total Spend`)))

# print(the_table30)

# # Generate the HTML but save it to a variable instead of directly outputting
# gt_output <- gt(the_table30, rowname_col = 'party_col') %>%
#   fmt_markdown(columns = everything()) %>%
#   cols_align(align = "center") %>%
#   gtExtras::gt_theme_538() %>%
#   eval(parse(text = paste0(add_ribbons_code)))
#
# # Print the HTML code to check for errors
# print(gt_output)
#
#
add_ribbons_code <- the_table30 %>%
  left_join(color_dat %>% mutate(party_col = party)) %>%
  mutate(ribbons_code = sprintf("add_ribbons(\"%s\", \"%s\")", party_col, colors)) %>%
  pull(ribbons_code) %>%
  # paste(collapse = "\n") %>%
  paste(collapse = "%>%")  # Add pipe after each ribbon

eval(parse(text = paste0("gt(the_table30, rowname_col = 'party_col') %>% fmt_markdown(columns = everything()) %>% cols_align(align = 'center') %>%  cols_align(align = \"left\", columns = `Top Spenders`) %>% gtExtras::gt_theme_538() %>% tab_style(style = 'vertical-align:center', locations = cells_body(columns = `Top Spenders`)) %>% ", add_ribbons_code)))

 # gt(the_table30, rowname_col = 'party_col') %>%
 #  fmt_markdown()

# election_dat30$internal_id



```





### `r last7days_string`

In totaal gaven politieke partijen gedurende deze periode `r paste0(currency_symbol, scales::comma_format()(sum7$total_spend_formatted))` euro uit en toonden ze `r sum7$total_num_ads` advertenties op Meta.



```{r, eval = F}

the_table7 <- get_table_dat(election_dat7, party) %>%
  arrange(desc(parse_number(`Total Spend`)))


add_ribbons_code <- the_table7 %>%
  left_join(color_dat %>% mutate(party_col = party)) %>%
  mutate(ribbons_code = sprintf("add_ribbons(\"%s\", \"%s\")", party_col, colors)) %>%
  pull(ribbons_code) %>%
  # paste(collapse = "\n") %>%
  paste(collapse = "%>%")  # Add pipe after each ribbon


eval(parse(text = paste0("gt(the_table7, rowname_col = 'party_col') %>% fmt_markdown(columns = everything()) %>% cols_align(align = 'center') %>%  cols_align(align = \"left\", columns = `Top Spenders`) %>% gtExtras::gt_theme_538() %>% tab_style(style = 'vertical-align:center', locations = cells_body(columns = `Top Spenders`)) %>% ", add_ribbons_code)))

```

:::







